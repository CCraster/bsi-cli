#!/usr/bin/env node

const program = require('commander');
const chalk = require('chalk');
const path = require('path');
const fs = require('fs').promises;
const log = console.log;
const UglifyJS = require('uglify-js');
const ora = require('ora');
const { logWithSpinner, failSpinner } = require('../lib/spinner');
program.option('-o, --output <file>', 'Output file path (default STDOUT)').parse(process.argv);
const file = program.args[0];
const absPath = path.isAbsolute(file) ? file : path.join(process.cwd(), file);

async function Compress() {
  logWithSpinner('starting compress');
  const originCode = await fs.readFile(absPath, {
    encoding: 'utf8',
  });
  const { error, code } = UglifyJS.minify(originCode);
  //  console.log(result);
  if (error) {
    failSpinner(error.message);
  } else {
    if (program.output) {
      const absPath = path.join(process.cwd(), program.output);
      await fs.writeFile(absPath, code);
    } else {
      console.log(code);
    }
    logWithSpinner('compress success!');
  }
}

Compress().then((r) => process.exit(-1));
